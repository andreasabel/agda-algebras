#!/bin/bash

# DESCRIPTION: This shell script generates html and markdown files for the
# static web pages processed by jekyll and comprising the Agda Universal
# Algebra Library html documentation.


# DETAILS
# Agda is used to generate html pages for each module. These pages are served at https://ualib.org
#
# 1.  **Html generation**  
#     Here is how the html pages are generated.
#     a.  Its best to start with the `generate-html` branch of the repository, to ensure that
#         the text surrounding Agda code in all .lagda files are written in markdown (as opposed to tex).
#         ```
#         git checkout generate-html
#         ```
#     b.  Edit the literate Agda files, e.g., `src/Demos/HSP.lagda`, as needed.  The text surrounding
#         the code should be written in markdown.
#     c.  Invoke the `generate-html` script from the main `agda-algebras` directory.  Assuming everything
#         type-checks, this will generate html documentation files in the `html` directory.
#
# 2.  **Html deployment**  
#     GitHub uses the content residing in the `gh-pages` branch of the repository when serving the
#     documentation web pages, so that's where we want to push the new html pages generated in Step 1 above.
#     a.  After completing Step 1, checkout the `gh-pages` branch.
#         ```
#         git checkout gh-pages
#         ```
#     b.  Copy all of the new documentation files into the main `agda-algebras` directory.
#         ```
#         \cp html/* .
#         ```
#     c.  Stage, commit, and push.
#         ```
#         git add .
#         git commit -m "update html documentation pages"
#         git push remote gh-pages
#         ```
#     Finally, visit to the [gh-pages](https://github.com/ualib/agda-algebras/tree/gh-pages) page at
#     GitHub to check that the new files were deployed correctly.  (There should be a green check mark
#     next to the latest commit number; if there's a bronze circle, click on it to monitor the deployment
#     job progress.)

SRCDIR="src"
HTMLDIR="html"
AGDA="agda"
TARGET="Everything"
OPTIONS="--html --html-highlight=code"

## absolute module names with no src/ prefix and no .lagda suffix
CHOPMODS=$(find $SRCDIR -name "*.lagda" | sed -e 's|^src/[/]*||' -e 's|.lagda||')

## replace / with . in $CHOPMODS list of module names
DOTMODS=$(echo $CHOPMODS | sed -e 's|/|.|g')

echo " "
echo "STEP 1. Generating agda program Everything.agda which imports all modules..."
echo " "

echo "{-# OPTIONS --without-K --exact-split --safe --cubical #-}" > $SRCDIR/$TARGET.agda
echo " " >> $SRCDIR/$TARGET.agda

git ls-tree --full-tree -r --name-only HEAD | grep '^src/[^\.]*.lagda' | sed -e 's|^src/[/]*|import |' -e 's|/|.|g' -e 's/.lagda//' -e '/import Everything/d' | LC_COLLATE='C' sort >> $SRCDIR/$TARGET.agda

echo " "
echo "STEP 2. Type checking Everything.agda which imports"
echo "        all modules, and generating html/markdown files..."
echo " "

$AGDA $OPTIONS $SRCDIR/$TARGET.agda

echo " "
echo "STEP 3. copying agda-algebras.tex to index.md and renaming"
echo "        all generated .tex files to have .md extension...."
echo " "

cp $HTMLDIR/{agda-algebras.tex,index.markdown}

# For some reason `agda --html` generates .tex files from our markdown-commented .lagda files.
# We rename them to have the more appropriate .md extension.
for f in $DOTMODS; do
    mv $HTMLDIR/$f.{tex,md}; done
echo " "
